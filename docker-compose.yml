version: "3"
services:
  web-app:
    build:
      context: .
    ports:
      - "8000:8000"
    restart: always
    depends_on:
      - yt_postgres
    volumes:
      - ./ecommerce:/ecommerce
    env_file:
      - .env
    command: >
      sh -c "./manage.py collectstatic --noinput && ./manage.py migrate && gunicorn -b 0.0.0.0:8000 ecommerce.wsgi:application"
  yt_postgres:
    image: postgres:16-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
  nginx:
    image: nginx:1.25.3-alpine
    restart: always
    depends_on:
      - web-app
    ports:
      - "80:80"
      - "403:403"
  adminer:
    image: adminer
    restart: always
    ports:
      - '8888:8080'
  redis:
    image: redis:7.0.5-alpine
    hostname: redis

  worker:
    build:
      context: .
    hostname: worker
    entrypoint: celery
    command: -A celery_app.app worker --loglevel=info
    volumes:
      - ./ecommerce:/ecommerce
    links:
      - redis
    depends_on:
      - redis

volumes:
  postgres_data:
